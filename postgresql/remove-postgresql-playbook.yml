---
- hosts:
    - database
    - database_replica
  user: "{{ ansible_ssh_user }}"
  become: true
  become_user: root
  become_method: sudo
  gather_facts: True

  vars_files:
    - ./vars/*.yml
    - ./tasks/variables.yml

  tasks:
    - name: Stop and disable PostgreSQL on RedHat
      ansible.builtin.service:
        name: postgresql
        state: stopped
        enabled: no
      when: ansible_os_family == 'RedHat'

    - name: Stop and disable PostgreSQL on Debian
      ansible.builtin.service:
        name: postgresql
        state: stopped
        enabled: no
      when: ansible_os_family == 'Debian'

    - name: Unmask PostgreSQL service on Debian
      ansible.builtin.shell:
        cmd: "{{ item }}"
      with_items:
        - systemctl unmask postgresql.service
        - rm /var/lib/dpkg/lock-frontend
      when: ansible_os_family == 'Debian'

    - name: Remove PostgreSQL on RedHat
      ansible.builtin.command: /usr/bin/yum remove -y postgresql*
      when: ansible_os_family == 'RedHat'

    - name: Remove PostgreSQL on Debian
      ansible.builtin.command: /usr/bin/apt-get purge -y postgresql*
      when: ansible_os_family == 'Debian'

    - name: Remove PostgreSQL data directory on RedHat
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/lib/pgsql
      when: ansible_os_family == 'RedHat'

    - name: Remove PostgreSQL data directory on Debian
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/postgresql/
        - /usr/lib/postgresql/
        - /var/lib/postgresql/
      when: ansible_os_family == 'Debian'

