---
- hosts:
    - database
    - database_replica
  user: "{{ ansible_ssh_user }}"
  become: true
  become_user: root
  become_method: sudo
  gather_facts: True

  vars_files:
    - ./vars/*.yml
    - ./tasks/variables.yml

  tasks:
    - name: Stop and disable PostgreSQL on Debian
      ansible.builtin.service:
        name: postgresql
        state: stopped
        enabled: no
      when: ansible_os_family == 'Debian'

    - name: Unmask PostgreSQL service on Debian
      ansible.builtin.shell:
        cmd: systemctl unmask postgresql.service
      when: ansible_os_family == 'Debian'

    - name: Check for processes related to apt-get, apt, or dpkg
      shell: ps aux | grep -E '(apt-get|apt|dpkg)'
      register: apt_processes
      changed_when: false

    - name: Kill apt-get, apt, and dpkg processes
      shell: "kill -9 {{ item.split()[1] }}"
      with_items: "{{ apt_processes.stdout_lines }}"
      ignore_errors: true
      when: apt_processes.stdout_lines | length > 0

    - name: Configure dpkg
      become: true
      shell: dpkg --configure -a
      ignore_errors: true

    - name: Remove PostgreSQL on Debian
      ansible.builtin.command: /usr/bin/apt-get purge -y postgresql*
      async: 3000
      poll: 0
      register: apt_task
      ignore_errors: true
      when: ansible_os_family == 'Debian'

    - name: Wait for apt-get to complete
      ansible.builtin.async_status:
        jid: "{{ apt_task.ansible_job_id }}"
        mode: cleanup
      register: apt_result
      until: apt_result.finished
      retries: 60
      delay: 5
      ignore_errors: true
      when: ansible_os_family == 'Debian'

    - name: Remove PostgreSQL data directory on Debian
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/postgresql/
        - /usr/lib/postgresql/
        - /var/lib/postgresql/
      when: ansible_os_family == 'Debian'


# ============================================ RED HAT =============================================
    - name: Stop and disable PostgreSQL on RedHat
      ansible.builtin.service:
        name: postgresql
        state: stopped
        enabled: no
      when: ansible_os_family == 'RedHat'

    - name: Remove PostgreSQL on RedHat
      ansible.builtin.command: /usr/bin/yum remove -y postgresql*
      when: ansible_os_family == 'RedHat'

    - name: Remove PostgreSQL data directory on RedHat
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/lib/pgsql
      when: ansible_os_family == 'RedHat'



