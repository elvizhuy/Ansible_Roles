---
# Variable configuration.
- include_tasks: variables.yml

# Setup/install tasks.
- include_tasks: setup-Archlinux.yml
  when: ansible_os_family == 'Archlinux'

- include_tasks: setup-Debian.yml
  when: ansible_os_family == 'Debian'

- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: initialize.yml
- include_tasks: configure.yml

# - import_tasks: pgsql_version.yml

# - name: Include distribution specific variables
#   include_vars: "{{ lookup('first_found', params) }}"
#   vars:
#     params:
#       files:
#         - "{{ ansible_facts.distribution }}-{{ ansible_facts.distribution_version }}.yml"
#         - "{{ ansible_facts.os_family }}-{{ ansible_facts.distribution_major_version }}.yml"
#         - "{{ ansible_facts.distribution }}.yml"
#         - "{{ ansible_facts.os_family }}.yml"
#       paths:
#         - "{{ role_path }}/vars"
#   tags:
#     - always

# - include_tasks: "{{ pgsqlrep_role }}.yml"
#   when: pgsqlrep_role != 'skip'

- include_tasks: configure-master.yml
  when: ansible_host == pgsqlrep_master_address

- include_tasks: configure-slave.yml
  when: ansible_host == pgsqlrep_replica_address

- name: Ensure PostgreSQL is started and enabled on boot.
  service:
    name: "{{ postgresql_daemon }}"
    state: "{{ postgresql_service_state }}"
    enabled: "{{ postgresql_service_enabled }}"
  become: true

# Configure PostgreSQL.
- import_tasks: users.yml
- import_tasks: databases.yml
- import_tasks: users_props.yml
